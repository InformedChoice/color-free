---
const coloringPages = [
	{ id: 1, title: 'Cat in Garden', category: 'nature', image: '/coloring-pages/cat_1.png' },
];
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<title>ColorFree - Gallery</title>
		<style>
			* {
				margin: 0;
				padding: 0;
				box-sizing: border-box;
			}
			body {
				font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
				background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
				min-height: 100vh;
				padding: 20px;
			}

			.header {
				text-align: center;
				color: white;
				margin-bottom: 40px;
			}

			.header h1 {
				font-size: 48px;
				margin-bottom: 10px;
			}

			.back-link {
				color: white;
				text-decoration: none;
				font-size: 18px;
				margin-bottom: 20px;
				display: inline-block;
				opacity: 0.9;
			}

			.back-link:hover {
				opacity: 1;
			}

			.filters {
				display: flex;
				justify-content: center;
				gap: 15px;
				flex-wrap: wrap;
				margin-bottom: 40px;
			}

			.filter-btn {
				background: rgba(255, 255, 255, 0.2);
				border: 2px solid white;
				color: white;
				padding: 10px 25px;
				border-radius: 25px;
				cursor: pointer;
				font-size: 16px;
				transition: all 0.3s ease;
			}

			.filter-btn:hover, .filter-btn.active {
				background: white;
				color: #764ba2;
			}

			.gallery {
				display: grid;
				grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
				gap: 25px;
				max-width: 1400px;
				margin: 0 auto;
			}

			.coloring-card {
				background: white;
				border-radius: 15px;
				padding: 20px;
				text-align: center;
				box-shadow: 0 8px 24px rgba(0,0,0,0.2);
				transition: transform 0.3s ease, box-shadow 0.3s ease;
				cursor: pointer;
				text-decoration: none;
				color: inherit;
				display: block;
			}

			.coloring-card:hover {
				transform: translateY(-8px);
				box-shadow: 0 12px 32px rgba(0,0,0,0.3);
			}

			.card-image {
				width: 100%;
				height: 200px;
				background: white;
				border-radius: 10px;
				display: flex;
				align-items: center;
				justify-content: center;
				margin-bottom: 15px;
				padding: 20px;
			}

			.card-image img {
				width: 100%;
				height: 100%;
				object-fit: contain;
			}

			.card-title {
				color: #764ba2;
				font-size: 20px;
				font-weight: 600;
				margin-bottom: 8px;
			}

			.card-category {
				color: #999;
				font-size: 14px;
				text-transform: uppercase;
				letter-spacing: 1px;
			}

			@media (max-width: 768px) {
				.header h1 {
					font-size: 36px;
				}
				.gallery {
					grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
					gap: 15px;
				}
			}
		</style>
	</head>
	<body>
		<div class="header">
			<a href="/" class="back-link">‚Üê Back to Home</a>
			<h1>üé® Choose Your Canvas</h1>
			<p>Select a coloring page and start creating!</p>
		</div>

		<div class="filters">
			<button class="filter-btn active" data-filter="all">All</button>
			<button class="filter-btn" data-filter="nature">Nature</button>
			<button class="filter-btn" data-filter="fantasy">Fantasy</button>
			<button class="filter-btn" data-filter="adventure">Adventure</button>
			<button class="filter-btn" data-filter="flowers">Flowers</button>
		</div>

		<div class="gallery">
			{coloringPages.map(page => (
				<a href={`/color/${page.id}`} class="coloring-card" data-category={page.category}>
					<div class="card-image">
						<img src={page.image} alt={page.title} />
					</div>
					<h3 class="card-title">{page.title}</h3>
					<p class="card-category">{page.category}</p>
				</a>
			))}
		</div>

		<script>
			const filterBtns = document.querySelectorAll('.filter-btn');
			const cards = document.querySelectorAll('.coloring-card');

			filterBtns.forEach(btn => {
				btn.addEventListener('click', () => {
					// Update active button
					filterBtns.forEach(b => b.classList.remove('active'));
					btn.classList.add('active');

					const filter = btn.dataset.filter;

					// Filter cards
					cards.forEach(card => {
						if (filter === 'all' || card.dataset.category === filter) {
							card.style.display = 'block';
						} else {
							card.style.display = 'none';
						}
					});
				});
			});
		</script>
	</body>
</html>
